openapi: 3.0.3
info:
  description: |
    Comprehensive project management API with task tracking, reporting,
    and video resources. Provides secure access control and project organization.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Little PM API
  version: 1.0.0
servers:
- description: Production API
  url: https://app.little.pm
tags:
- description: Project lifecycle management
  name: Projects
paths:
  /projects:
    get:
      description: Retrieve paginated list of projects with user access
      operationId: listProjects
      parameters:
      - description: Maximum number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter tasks by status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - in_progress
          - completed
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: Successful project list retrieval
        "401":
          content:
            application/json:
              example:
                code: 401
                message: Authentication required
              schema:
                $ref: '#/components/schemas/Error'
          description: Missing or invalid authentication
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      security:
      - bearerAuth: []
      summary: List accessible projects
      tags:
      - Projects
      x-accepts:
      - application/json
      x-tags:
      - tag: Projects
    post:
      description: Create project from blueprint
      parameters:
      - description: Maximum number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Blueprints by its type
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - toy
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_projects_post_request'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project was created from a blueprint
        "400":
          content:
            application/json:
              example:
                code: 400
                message: Validation error
                details:
                - Invalid date format
                - "Missing required field: title"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request parameters
        "403":
          content:
            application/json:
              example:
                code: 403
                message: Insufficient permissions
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions
        "404":
          content:
            application/json:
              example:
                code: 404
                message: Project not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Create project from blueprint
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: Projects
  /projects/blueprints:
    get:
      description: Retrieve paginated list of blueprints for projects with user access
      operationId: listBlueprintsProject
      parameters:
      - description: Maximum number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectBlueprint'
                type: array
          description: Successful project list retrieval
        "401":
          content:
            application/json:
              example:
                code: 401
                message: Authentication required
              schema:
                $ref: '#/components/schemas/Error'
          description: Missing or invalid authentication
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      security:
      - bearerAuth: []
      summary: List available blueprints
      tags:
      - Projects
      x-accepts:
      - application/json
      x-tags:
      - tag: Projects
  /projects/{projectUUID}:
    get:
      description: Retrieve detailed information about a specific project
      operationId: getProject
      parameters:
      - description: Unique project identifier
        explode: false
        in: path
        name: projectUUID
        required: true
        schema:
          $ref: '#/components/schemas/uuid'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project details retrieved
        "403":
          content:
            application/json:
              example:
                code: 403
                message: Insufficient permissions
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions
        "404":
          content:
            application/json:
              example:
                code: 404
                message: Project not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      security:
      - bearerAuth: []
      summary: Get project details
      tags:
      - Projects
      x-accepts:
      - application/json
      x-tags:
      - tag: Projects
    put:
      description: Update project metadata and details
      operationId: updateProject
      parameters:
      - description: Unique project identifier
        explode: false
        in: path
        name: projectUUID
        required: true
        schema:
          $ref: '#/components/schemas/uuid'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project updated successfully
        "400":
          content:
            application/json:
              example:
                code: 400
                message: Validation error
                details:
                - Invalid date format
                - "Missing required field: title"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request parameters
        "403":
          content:
            application/json:
              example:
                code: 403
                message: Insufficient permissions
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions
        "404":
          content:
            application/json:
              example:
                code: 404
                message: Project not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      security:
      - bearerAuth: []
      summary: Update project
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: Projects
components:
  parameters:
    limit:
      description: Maximum number of items to return
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        maximum: 100
        minimum: 1
        type: integer
      style: form
    offset:
      description: Pagination offset
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    projectUUID:
      description: Unique project identifier
      explode: false
      in: path
      name: projectUUID
      required: true
      schema:
        $ref: '#/components/schemas/uuid'
      style: simple
    taskUUID:
      description: Unique task identifier
      explode: false
      in: path
      name: taskUUID
      required: true
      schema:
        $ref: '#/components/schemas/uuid'
      style: simple
    blueprintUUID:
      description: Unique task identifier
      explode: false
      in: path
      name: blueprintUUID
      required: true
      schema:
        $ref: '#/components/schemas/uuid'
      style: simple
    reportUUID:
      description: Unique report identifier
      explode: false
      in: path
      name: reportUUID
      required: true
      schema:
        $ref: '#/components/schemas/uuid'
      style: simple
    videoUUID:
      description: Unique video identifier
      explode: false
      in: path
      name: videoUUID
      required: true
      schema:
        $ref: '#/components/schemas/uuid'
      style: simple
    roleFilter:
      description: Filter by user role
      explode: true
      in: query
      name: role
      required: false
      schema:
        enum:
        - owner
        - member
        type: string
      style: form
    taskStatusFilter:
      description: Filter tasks by status
      explode: true
      in: query
      name: status
      required: false
      schema:
        enum:
        - pending
        - in_progress
        - completed
        type: string
      style: form
    blueprintType:
      description: Blueprints by its type
      explode: true
      in: query
      name: status
      required: false
      schema:
        enum:
        - toy
        type: string
      style: form
    projectStatusFilter:
      description: Filter tasks by status
      explode: true
      in: query
      name: status
      required: false
      schema:
        enum:
        - in_progress
        - completed
        type: string
      style: form
  responses:
    BadRequest:
      content:
        application/json:
          example:
            code: 400
            message: Validation error
            details:
            - Invalid date format
            - "Missing required field: title"
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request parameters
    UnauthorizedError:
      content:
        application/json:
          example:
            code: 401
            message: Authentication required
          schema:
            $ref: '#/components/schemas/Error'
      description: Missing or invalid authentication
    ForbiddenError:
      content:
        application/json:
          example:
            code: 403
            message: Insufficient permissions
          schema:
            $ref: '#/components/schemas/Error'
      description: Insufficient permissions
    NotFoundError:
      content:
        application/json:
          example:
            code: 404
            message: Project not found
          schema:
            $ref: '#/components/schemas/Error'
      description: Resource not found
    InternalServerError:
      content:
        application/json:
          example:
            code: 500
            message: Internal server error
          schema:
            $ref: '#/components/schemas/Error'
      description: Server error
  schemas:
    uuid:
      example: 550e8400-e29b-41d4-a716-446655440000
      format: uuid
      type: string
    Error:
      example:
        code: 404
        details:
        - Invalid UUID format
        - Missing required field
        message: Resource not found
      properties:
        code:
          example: 404
          format: int32
          type: integer
        message:
          example: Resource not found
          type: string
        details:
          example:
          - Invalid UUID format
          - Missing required field
          items:
            type: string
          type: array
      type: object
    Project:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        ownerUUID: 550e8400-e29b-41d4-a716-446655440000
        name: Q4 Marketing Campaign
        description: Year-end marketing push
        projectUUID: 550e8400-e29b-41d4-a716-446655440000
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        projectUUID:
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
        name:
          example: Q4 Marketing Campaign
          type: string
        description:
          example: Year-end marketing push
          type: string
        ownerUUID:
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - name
      - ownerUUID
      - projectUUID
      type: object
    ProjectBlueprint:
      example:
        blueprintUUID: 550e8400-e29b-41d4-a716-446655440000
        createdAt: 2000-01-23T04:56:07.000+00:00
        description: Q4 marketing strategy
        title: Marketing Blueprint
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        blueprintUUID:
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
        title:
          example: Marketing Blueprint
          type: string
        description:
          example: Q4 marketing strategy
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - blueprintUUID
      - projectUUID
      - title
      type: object
    ProjectUpdate:
      example:
        name: Updated Project Name
        description: Revised project scope
      properties:
        name:
          example: Updated Project Name
          type: string
        description:
          example: Revised project scope
          type: string
      type: object
    _projects_post_request:
      properties:
        blueprintUUID:
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
        name:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      description: Valid JWT token required for authenticated endpoints
      scheme: bearer
      type: http
